*,
*::after,
*::before{
    padding: 0;
    margin: 0;
    border: 0;
    box-sizing: border-box;
}
@font-face {
    font-family: 'Estonia';
    src: url('/fonts/Estonia-Regular.eot');
    src: local('Estonia Regular'), local('Estonia-Regular'),
        url('/fonts/Estonia-Regular.eot?#iefix') format('embedded-opentype'),
        url('/fonts/Estonia-Regular.woff2') format('woff2'),
        url('/fonts/Estonia-Regular.woff') format('woff'),
        url('/fonts/Estonia-Regular.ttf') format('truetype');
    font-weight: normal;
    font-style: normal;
    font-display: swap;
}

.pangolin-regular {
    font-family: "Pangolin", cursive;
    font-weight: 400;
    font-style: normal;
}

body{
    background-color: rgba(46, 45, 45, 0.962);
    font-size: 15px;
    padding: 5px; 
}

.wrapper{
    /* width: calc(1500px + 3*20px); */
    background-color: #fff;
    padding: 3px;  
    background-image: url("img/ava7patterns_pattern_1372.png");
    text-align: center;
    /* background-size: ;
    background-position: center;
    background-size: cover; */
}

header {
    display: block;
    padding: 3px;
    margin: 3px;
    /* background-color: #ccc; */
    color: black;
    border: 2px solid black;
    border-radius: 3px;
    max-width: 100%;
    text-align: center;
    font-size: 12px;
    background: rgb(187,186,200);
    background: linear-gradient(90deg, rgba(187,186,200,1) 0%, rgba(205,205,212,1) 35%, rgba(196,211,214,1) 100%);
    position: sticky;
    top: 3px;
    min-height: 12vh;
}
header li{
    display: inline-block; 
    margin: 5px;
    /* background-color: #ccc; */
    border: 2px solid black;
    border-radius: 5px;
}

header li a{
    display: inline-block; 
    font-family: "Pangolin";
    text-decoration: none; /* убирает автоматическое подчеркивание  в созданном нами списке */
    text-transform: uppercase;
    width: 100%;
    height: auto;
    padding: 3px;
}

a:hover{
    color: rgb(248, 4, 4);
    background-color: #ccc;
    
}

main{
    display: flex; /*выравнивание по центру по вертикали*/
    align-items: center; /*раскидываем по сторонам элементы в блоке*/
    justify-content: space-between; /* данное свойство равномерно распределяет элементы по всей строке */
}

section {
    max-width: 75%;
    height: 88vh;
    display: inline-block;
    background: rgb(187,186,200);
    background: linear-gradient(90deg, rgba(187,186,200,1) 0%, rgba(205,205,212,1) 35%, rgba(196,211,214,1) 100%);
    padding: 3px !important;
    margin: 0px 0px 0px 3px;
    border: 2px solid black; 
    border-radius: 3px;
    top: 107px;
    position: sticky;
    overflow: auto;
}

aside {
    max-width: 25%;
    height: 88vh;
    float: right; 
    padding: 3px !important;
    background: rgb(206,221,222);
    background: linear-gradient(90deg, rgba(206,221,222,1) 0%, rgba(209,222,224,1) 22%, rgba(196,211,214,1) 100%);
    text-align: center;
    margin: 0px 3px 0px 0px;
    border: 2px solid black;
    border-radius: 3px;
    position: sticky;
    overflow: auto;
}

h1 {
    font-family: Estonia, sans-serif;
    font-size: 30px;
    text-align: center;
    color: #280465;
    font-weight: bold;
    padding: 5px;
    margin: 10px;
    text-shadow: 1px 1px 2px #1f1e1f;
}

h2 {
    font-family: Arial, Helvetica, sans-serif;
    font-size: 18px;
    text-align: center;
    padding: 5px;
    margin: 10px;
    color: #280465;
    text-shadow: 1px 1px 2px #1f1e1f;
}

img {
    width: 40vw;
    height: auto;
    /* overflow: hidden; */
    border: 2px solid grey;
    border-radius: 3px;
    object-fit: fill;
    float: left;
    margin-right: 10px;
    transition: 1s;
}

img:hover {
    transform: scale(1.3);
}

p {
    font-family:'Times New Roman', Times, serif;
    text-align: justify;
    text-indent: 20px;
}

p:first-letter {
    text-transform: uppercase;
}
.my_icon{
    font-size: 20px;
    color:#280465;
}
/*vertical-align: middle; – данное свойство управляет вертикальным
выравниванием элементов внутри своих родителей. Его применяют
к строчным элементам и к ячейкам таблиц. Значение middle для
строчных элементов выравнивает середину текущего элемента
по середине родительского элемента. Для табличных элементов данное
значение выравнивает содержимое текущей ячейки по центру строки,
учитывая внутренние отступы.*/

/*По умолчанию элементы делятся на строчные и блочные. Блочные
не могут стоять в одной строке друг с другом, а строчным нельзя
задать размер, их размер зависит от их содержимого. Для того, чтобы
изменить поведение элементов, применяют display и его значения.
Самые основные значения display это:
– block – элемент становится блочным, даже если был строчным.
Вследствие чего ему можно записывать размеры, внешние отступы
и пр.
– inline- преобразуем в строчный элемент.
– none – элемент исчезает со страницы.
– inline-block – блочно-строчный тип, его блочные свойства
сохраняются, однако он может стать в одну строку с другими блоками,
если у них тоже прописано inline-block и им хватает места по ширине.
Примечание: по умолчанию блок занимает в родителе все
свободное место по ширине, вследствие чего необходимо вручную
определить ширину для него.
– table – преобразуем элемента в таблицу.*/
